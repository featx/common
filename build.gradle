plugins {
    id 'groovy'
    id 'java'
    id 'scala'
    id 'org.jetbrains.kotlin.jvm' version "${kotlinVersion}"
    id 'maven-publish'
}

group 'org.featx.spec'
version '1.0.1-SNAPSHOT'

sourceCompatibility = JavaVersion.VERSION_11
targetCompatibility = JavaVersion.VERSION_11

repositories {
    mavenCentral()
    maven {
        url 'https://maven.aliyun.com/repository/public'
    }
    maven {
        url 'https://repo.rdc.aliyun.com/repository/67417-release-5dYQ7a/'
        credentials {
            username "${MVN_USERNAME}"
            password "${MVN_PASSWORD}"
        }
    }
    maven {
        url 'https://repo.rdc.aliyun.com/repository/67417-snapshot-6tKIEl/'
        credentials {
            username "${MVN_USERNAME}"
            password "${MVN_PASSWORD}"
        }
    }
}

dependencies {
    /*Compile Time*/
    compileOnly("javax.servlet:javax.servlet-api:${servletVersion}")
    compileOnly("org.projectlombok:lombok:${lombokVersion}")
    annotationProcessor("org.projectlombok:lombok:${lombokVersion}")
    /*Common Runtime*/
    implementation("com.google.guava:guava:${guavaVersion}")
    implementation("org.slf4j:slf4j-api:${slf4jVersion}")//TODO compile Only?
    /*JVM language Runtime*/
    implementation("org.codehaus.groovy:groovy:${groovyVersion}")
    implementation("org.jetbrains.kotlin:kotlin-stdlib-common")
    implementation("org.jetbrains.kotlin:kotlin-stdlib-jdk8")
    implementation("org.jetbrains.kotlin:kotlin-stdlib-js")
    implementation("org.scala-lang:scala-library:${scalaVersion}")
    /*Test*/
    testCompile("org.junit.jupiter:junit-jupiter:${junitVersion}")
    testCompile("org.scalactic:scalactic_2.13:${scalacticVersion}")
    testCompile("org.scalatest:scalatest_2.13:${scalacticVersion}")
    testCompile("io.mockk:mockk:${mockkVersion}")
    testCompile("org.jetbrains.kotlin:kotlin-test-junit5")
    testImplementation("org.jetbrains.kotlin:kotlin-test-js")
}

compileJava {
    options.encoding = "UTF-8"
}

compileGroovy {
    targetCompatibility = JavaVersion.VERSION_11
    options.encoding = "UTF-8"
}

compileScala {
    targetCompatibility = JavaVersion.VERSION_11
    options.encoding = "UTF-8"
}

compileKotlin {
    kotlinOptions.jvmTarget = JavaVersion.VERSION_11
}

compileTestKotlin {
    kotlinOptions.jvmTarget = JavaVersion.VERSION_11
}

task sourceJar(type: Jar, dependsOn: classes) {
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    from javadoc.destinationDir
}

publishing {
    publications {
        maven(MavenPublication) {
            from components.java

            artifact sourceJar {
                classifier "sources"
            }

            artifact javadocJar {
                classifier "javadoc"
            }
        }
    }

    repositories {
        maven {
            url = "https://repo.rdc.aliyun.com/repository/67417-release-5dYQ7a/"
            if (project.version.endsWith("SNAPSHOT")) {
                url = "https://repo.rdc.aliyun.com/repository/67417-snapshot-6tKIEl/"
            }
            credentials {
                username "${MVN_USERNAME}"
                password "${MVN_PASSWORD}"
            }
        }
    }
}